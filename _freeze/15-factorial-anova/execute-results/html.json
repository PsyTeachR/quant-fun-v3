{
  "hash": "d2f2d4b56e3aa53c74966f7e01e0c2b5",
  "result": {
    "markdown": "# Factorial ANOVA\n\nFor this chapter, we're going to look at an example of a factorial ANOVA. You'll learn more about interpreting these in the lectures, but for now, we'll just focus on the code. \n\nWe're going to reproduce the analysis from Experiment 3 of [Zhang, T., Kim, T., Brooks, A. W., Gino, F., & Norton, M. I. (2014). A \"present\" for the future: The unexpected value of rediscovery. Psychological Science, 25, 1851-1860.](https://journals.sagepub.com/doi/abs/10.1177/0956797614542274). You may remember this study from the Chapter Visualisation chapter. \n\nThis experiment has a 2 x 2 mixed design:\n\n* The first IV is time (time1, time2) and is within-subjects \n* The second IV is type of event (ordinary vs. extraordinary) and is a between-subjects factor \n* The DV we will use is `interest` \n\n### Activity 1: Set-up {#factorial-a1}\n\n* Open R Studio and set the working directory to your chapter folder. Ensure the environment is clear. \n* Open a new R Markdown document and save it in your working directory. Call the file \"Factorial ANOVA\". \n* Download <a href=\"Zhang et al. 2014 Study 3.csv\" download>Zhang et al. 2014 Study 3.csv</a> and extract the files in to your Chapter 15 folder. \n* If you're on the server, avoid a number of issues by restarting the session - click `Session` - `Restart R` \n* If you are working on your own computer, install the package `rcompanion`. Remember **do not install packages on university computers, they are already installed**.\n* Type and run the code that loads `pwr`, `rcompanion`, `lsr`, `car`, `broom`, `afex`, `emmeans` and `tidyverse` using the `library()` function.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nRun the below code to load the data and wrangle it into the format we need. You don't need to write this code yourself but do make sure you can understand what each line is doing - a good way to do this when the code uses pipes (`%>%`) is to highlight and run each line progressively so you can see how it builds up. Line-by-line the code:\n\n* Reads in the data file\n* Select the three columns we need  \n* Adds on a column of subject IDs  \n* Tidies the data\n* Recodes the values of `Condition` from numeric to text labels\n* Recodes the values of `time` to be easier to read/write\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactorial <- read_csv(\"Zhang et al. 2014 Study 3.csv\")%>%\n  select(Condition, T1_Predicted_Interest_Composite, T2_Actual_Interest_Composite)%>%\n  mutate(subject = row_number())%>%\n  pivot_longer(names_to = \"time\",values_to = \"interest\", cols =       c(\"T1_Predicted_Interest_Composite\",\"T2_Actual_Interest_Composite\"))%>%\n  mutate(Condition = dplyr::recode(Condition, \"1\" = \"Ordinary\", \"2\" = \"Extraordinary\"))%>%\n  mutate(time = dplyr::recode(time, \"T1_Predicted_Interest_Composite\" = \"time1_interest\",\n                       \"T2_Actual_Interest_Composite\" = \"time2_interest\")) %>%\n  mutate(Condition = as.factor(Condition)) %>% \n  mutate (time= as.factor(time))\n```\n:::\n\n\n### Activity 2: Descriptive statistics {#factorial-a2}\n\n* Calculate descriptive statistics (mean and SD) for `interest`  for each `Condition` for each `time` (hint: you will need to `group_by()` two variables) and store it in an object named `sum_dat_factorial`. These are known as the cells means.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n### Activity 3: Violin-boxplots {#factorial-a3}\n\nWe're going to produce two kinds of plots to visualise our data. First, we'll produce violin-boxplots so that we can see the distribution of our data.\n\n* Write the code that produces the below violin-boxplots for the scores in each group. \n  * Hint 1: you will need to add in the second IV in the first call to ggplot as a fill argument (aes(x,y,fill)). \n  * Hint 2: you will need to add `position = position_dodge(.9)` to geom_boxplot to get the plots to align. \n\nYou don't need to replicate the exact colour scheme used below, see if you can play around with the settings to whatever colour scheme you think works best.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Violin-boxplot by condition and time](15-factorial-anova_files/figure-html/plt1-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Activity 4: Interaction plots {#factorial-a4}\n\nNow we're going to produce an interaction plot that makes it easier to see how the IVs are interacting, which requires some ggplot2 functions we haven't come across yet. Rather than using the raw data in `dat_factorial`, we use the means that we produced in `sum_dat_factorial`. This type of plot requires two geoms, one to draw the points, and one to draw the lines that connect them. \n\nThis plot reproduces the plot used in the paper.\n\n* Run the code and then play around with how it looks by changing the arguments for e.g., colour, line-type, and the theme.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(sum_dat_factorial, aes(x = time, y = mean, group = Condition, shape = Condition)) +\n  geom_point(size = 3) +\n  geom_line(aes(linetype = Condition))+\n  scale_x_discrete(labels = c(\"Time 1\", \"Time 2\"))+\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![Interaction plot](15-factorial-anova_files/figure-html/plot2-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Activity 5: ANOVA {#factorial-a5}\n\n* Complete the below code to run the factorial ANOVA. Remember that you will need to specify both IVs and that one of them is between-subjects and one of them is within-subjects. Look up the help documentation for `aov_ez` to find out how to do this. \n\n* Save the ANOVA model to an object called `mod_factorial`\n* Pull out the anova table, you can either do this with `mod_factorial$anova_table` or `anova(mod_factorial)` both have the same result. Save this to an object named `factorial_output` and make sure you have used `tidy()`.\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod_factorial <- aov_ez(id = \"NULL\",\n               data = NULL, \n               between = \"NULL\", \n               within = \"NULL\",\n               dv = \"NULL\", \n               type = 3,\n               es = \"NULL\") \n\nfactorial_output <- NULL\n```\n:::\n\n\nLook at the results. Remember the pre-class information about how to read p-values in scientific notation.\n\n* Is the main effect of condition significant? <select class='webex-select'><option value='blank'></option><option value=''>Yes</option><option value='answer'>No</option></select>\n* Is the main effect of time significant? <select class='webex-select'><option value='blank'></option><option value='answer'>Yes</option><option value=''>No</option></select>\n* Is the two-way interaction significant? <select class='webex-select'><option value='blank'></option><option value='answer'>Yes</option><option value=''>No</option></select>\n\n### Activity 6: Assumption checking {#factorial-a6}\n\nThe assumptions for a factorial ANOVA are the same as the one-way ANOVA.\n\n1. The DV is interval or ratio data\n2. The observations should be independent\n3. The residuals should be normally distributed\n4. There should be homogeneity of variance between the groups\n\nAs before, we know assumption 2 is met from the design of the study. Assumption 1 throws up an interesting issue which is the problem of ordinal data. Ordinal data are the kind of data that come from Likert scales and are very common in psychology. The problem is that ordinal data aren't interval or ratio data, there's a fixed number of values they can take (the values of the Likert scale) and you can't claim that the distance between the values is equal (is the difference between strongly agree and agree the same as the difference between agree and neutral?). \n\nTechnically, we shouldn't use an ANOVA to analyse ordinal data - *but almost everyone does*. Most people would argue that if there are multiple Likert scale items that are averaged (which is the case in our study) and this averaged data are normally distributed, then it is not a problem. There is a minority (who are actually correct) that argue you should use non-parametric methods or more complicated tests such as ordinal regression for this type of data. Whichever route you choose, you should understand the data you have and you should be able to justify your decision.\n\n* To test assumption 3, extract the residuals from the model (`mod_factorial$lm$residuals`), create a qq-plot and conduct a Shapiro-Wilk test.\n\n* Are the residuals normally distributed? <select class='webex-select'><option value='blank'></option><option value=''>Yes</option><option value=''>No</option><option value='answer'>No, but given the sample it is probably acceptable to proceed</option></select> \n\nFor the final assumption, we can again use `test_levene()` to test homogeneity of variance.\n\n* Conduct Levene's test. Is assumption 4 met? <select class='webex-select'><option value='blank'></option><option value='answer'>Yes</option><option value=''>No</option></select>\n\n\n### Activity 7: Post-hoc tests {#factorial-a7}\n\nBecause the interaction is significant, we should follow this up with post-hoc tests using `emmeans()` to determine which comparisons are significant. If the overall interaction is not significant, you should not conduct additional tests.\n\n`emmeans()` requires you to specify the `aov` object, and then the factors you want to contrast. For an interaction, we use the notation `pairwise ~ IV1 | IV2` and you specify which multiple comparison correction you want to apply. Finally, you can use `tidy()` to tidy up the output of the contrasts and save it into a tibble.\n\n* Run the below code and view the results. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# run the tests\nposthoc_factorial <- emmeans(mod_factorial, \n                             pairwise ~ time| Condition, \n                             adjust = \"bonferroni\")\n\n# tidy up the output of the tests\ncontrasts_factorial <- posthoc_factorial$contrasts %>%\n  tidy()\n```\n:::\n\n\nNote that because there are two factors, we could also reverse the order of the IVs. Above, we get the results contrasting time 1 and time 2 for each event condition. Instead, we could look at the difference between ordinary and extraordinary events at each time point.\n\n* Run the below code and look at the output of `contrast_factorial` and `contrasts_factorial2` carefully making sure you understand how to interpret the results. You will find it useful to refer to the interaction plot we made earlier.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nposthoc_factorial2 <- emmeans(mod_factorial, \n                             pairwise ~ Condition| time, \n                             adjust = \"bonferroni\") \n\ncontrasts_factorial2 <- posthoc_factorial2$contrasts %>%\n  tidy()\n```\n:::\n\n\nBecause our main effects (condition and time) only have two levels, we don't need to do any post-hoc tests to determine which conditions differ from each other, however, if one of our factors had three levels then we could use `emmeans()` to calculate the contrast for the main effects, like we did for the one-way ANOVA. \n\nFinally, to calculate effect size for the pairwise comparisons we again need to do this individually using 'cohensD()` from `lsr`. \n\n* Run the below code to add on effect sizes to `contrasts_factorial` and `contrasts_factorial2`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd_extra_t1_t2 <- cohensD(interest ~ time, \n                         data = (filter(factorial, Condition == \"Extraordinary\") %>% droplevels())) \n\nd_ord_t1_t2 <- cohensD(interest ~ time, \n                         data = (filter(factorial, Condition == \"Ordinary\") %>% droplevels())) \n\n\nCondition_ds <- c(d_extra_t1_t2, d_ord_t1_t2)\n\ncontrasts_factorial <- contrasts_factorial %>%\n  mutate(eff_size = Condition_ds)\n\nd_time1_extra_ord <- cohensD(interest ~ Condition, \n                         data = (filter(factorial, time == \"time1_interest\") %>% droplevels())) \n\nd_time2_extra_ord <- cohensD(interest ~ Condition, \n                         data = (filter(factorial, time == \"time2_interest\") %>% droplevels()))\n\n\ntime_ds <- c(d_time1_extra_ord, d_time2_extra_ord)\n\ncontrasts_factorial2 <- contrasts_factorial2 %>%\n  mutate(eff_size = time_ds)\n```\n:::\n\n\n### Activity 8: Write-up {#factorial-a8}\n\n* p-values of < .001 have been entered manually. There is a way to get R to produce this formatting but it's overly complicated for our purposes. If you want to push yourself, look up the [papaja](https://github.com/crsh/papaja) package. \n* The values of partial eta-squared do not match between our analysis and those reported in the paper. I haven't figured out why this is yet - if you know, please get in touch!\n* We have replaced the simple effects in the main paper with our pairwise comparisons. \n\nFirst we need to calculate descriptives for the main effect of time as we didn't do this earlier.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntime_descrip <- factorial %>% \n  group_by(time) %>%\n  summarise(mean_interest = mean(interest, na.rm = TRUE),\n            sd_interest = sd(interest, na.rm = TRUE))\n```\n:::\n\n\nCopy and paste the below into **white-space**.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nWe conducted the same repeated measures ANOVA with interest as the dependent measure and again found a main effect of time, F(`r factorial_output$num.Df[2]`, `r factorial_output$den.Df[2]`) = `r factorial_output$statistic[2] %>% round(2)`, p < .001, ηp2 = `r factorial_output$ges[2] %>% round(3)`; anticipated interest at Time 1 (M = `r time_descrip$mean_interest[1] %>% round(2)`), SD = `r time_descrip$sd_interest[1]%>% round(2)`)) was lower than actual interest at Time 2 (M = `r time_descrip$mean_interest[2]%>% round(2)`, SD = `r time_descrip$sd_interest[2]%>% round(2)`).We also observed an interaction between time and type of experience, F(`r factorial_output$num.Df[3]`, `r factorial_output$den.Df[3]`) = `r factorial_output$statistic[3] %>% round(3)`, p = `r factorial_output$p.value[3] %>% round(2)`, ηp2 = `r factorial_output$ges[3] %>% round(3)`. Pairwise comparisons revealed that for ordinary events, predicted interest at Time 1 (M = `r sum_dat_factorial$mean[3]%>% round(2)`, SD = `r sum_dat_factorial$sd[3]%>% round(2)`) was lower than experienced interest at Time 2 (M = `r sum_dat_factorial$mean[4]%>% round(2)`, SD = `r sum_dat_factorial$sd[4]%>% round(2)`), t(`r contrasts_factorial$df[2]%>% round(2)`) = `r contrasts_factorial$statistic[2]%>% round(2)`, p < .001, d = `r contrasts_factorial$eff_size[2]%>% round(2)`. Although predicted interest for extraordinary events at Time 1 (M = `r sum_dat_factorial$mean[1]%>% round(2)`, SD = `r sum_dat_factorial$sd[1]%>% round(2)`) was lower than experienced interest at Time 2 (M = `r sum_dat_factorial$mean[2]%>% round(2)`, SD = `r sum_dat_factorial$sd[2]%>% round(2)`), t(`r contrasts_factorial$df[1]%>% round(2)`) = `r contrasts_factorial$statistic[1]%>% round(2)`, p < .001, d = `r contrasts_factorial$eff_size[1]%>% round(2)` , the magnitude of underestimation was smaller than for ordinary events.\n```\n:::\n\n\n> We conducted the same repeated measures ANOVA with interest as the dependent measure and again found a main effect of time, F(1, 128) = 25.88, p < .001, ηp2 = 0.044; anticipated interest at Time 1 (M = 4.2), SD = 1.12)) was lower than actual interest at Time 2 (M = 4.69, SD = 1.19).We also observed an interaction between time and type of experience, F(1, 128) = 4.445, p = 0.04, ηp2 = 0.008. Pairwise comparisons revealed that for ordinary events, predicted interest at Time 1 (M = 4.04, SD = 1.09) was lower than experienced interest at Time 2 (M = 4.73, SD = 1.24), t(128) = -5.05, p < .001, d = 0.59. Although predicted interest for extraordinary events at Time 1 (M = 4.36, SD = 1.13) was lower than experienced interest at Time 2 (M = 4.65, SD = 1.14), t(128) = -2.12, p < .001, d = 0.25 , the magnitude of underestimation was smaller than for ordinary events.\n\n### Activity 9: Transforming data {#factorial-a9}\n\nIn this chapter we decided that the violation of the assumption of normality was ok so that we could replicate the results in the paper. But what if we weren't happy with this or if the violation had been more extreme? One option to deal with normality is to **transform your data**. If you want more information on this you should consult the Appendix chapter on data transformation.\n\nThere are various options for how you can transform data but we're going to use Tukeys Ladder of Powers transformation. This finds the power transformation that makes the data fit the normal distribution as closely as possible with this type of transformation.\n\n* Run the below code. This will use `mutate()` to add a new variable to the data-set, `interest_tukey` which is going to be our transformed DV. The function `transformTukey()` is from the `rcompanion` package. Setting `plotit = TRUE` will automatically create qqPlots and histograms so that we can immediately visualise the new variable. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactorial <- factorial %>%\n  mutate(interest_tukey = transformTukey(interest, plotit=TRUE))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nNow that you've transformed the DV we can re-run the ANOVA with this new variable.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntukey_factorial <- aov_ez(id = \"subject\",\n               data = factorial, \n               between = \"Condition\", \n               within = \"time\",\n               dv = \"interest_tukey\", \n               type = 3)\n\ntukey_factorial\n```\n:::\n\n\nNotice that doing this hasn't changed the pattern of the ANOVA results, the p-values for the main effects and interactions are very slightly different but the overall conclusions remain the same. This is likely because the violations of normality was quite mild and there is a large sample size, however, with the transformation we can be more confident in our results and it may not always be the case that the transformed ANOVA is the same if the violations were more extreme. \n\n#### Finished! {#factorial-fin}\n\n\n### Activity solutions {#factorial-sols}\n\n#### Activity 1 {#factorial-a1sol}\n\n\n<div class='webex-solution'><button>Activity 1</button>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"pwr\")\nlibrary(\"rcompanion\")\nlibrary(\"car\")\nlibrary(\"lsr\")\nlibrary(\"broom\")\nlibrary(\"afex\")\nlibrary(\"emmeans\")\nlibrary(\"tidyverse\")\n```\n:::\n\n\n</div>\n\n\n** Click tab to see solution **\n\n\n#### Activity 2 {#factorial-a2sol}\n\n\n<div class='webex-solution'><button>Solution</button>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsum_dat_factorial<-factorial%>%\n  group_by(Condition, time)%>%\n  summarise(mean = mean(interest, na.rm = TRUE),\n            sd = sd(interest, na.rm = TRUE)\n            )\n```\n:::\n\n\n</div>\n\n\n** Click tab to see solution **\n\n\n#### Activity 3 {#factorial-a3sol}\n\n\n<div class='webex-solution'><button>Solution</button>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(factorial, \n       aes(x = time , y = interest, fill = Condition))+\n  geom_violin(trim = FALSE, \n              alpha = .4)+\n  geom_boxplot(position = position_dodge(.9), \n               width = .2, \n               alpha = .6)+\n  scale_x_discrete(labels = c(\"Time 1\", \"Time 2\"))+\n  scale_fill_viridis_d(option = \"E\")+\n  stat_summary(fun = \"mean\", geom = \"point\",\n               position = position_dodge(width = 0.9)) +\n  stat_summary(fun.data = \"mean_se\", geom = \"errorbar\", width = .1,\n               position = position_dodge(width = 0.9)) +\n  theme_minimal()\n```\n:::\n\n\n</div>\n\n\n** Click tab to see solution **\n\n#### Activity 5 {#factorial-a5sol}\n\n\n<div class='webex-solution'><button>Solution</button>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod_factorial <- aov_ez(id = \"subject\",\n               data = factorial, \n               between = \"Condition\", \n               within = \"time\",\n               dv = \"interest\", \n               type = 3) \n\nfactorial_output <- anova(mod_factorial) %>% tidy()\n\n# OR\n\nfactorial_output <- mod_factorial$anova_table %>% tidy()\n```\n:::\n\n\n</div>\n\n\n** Click tab to see solution **\n\n#### Activity 6 {#factorial-a6sol}\n\n\n<div class='webex-solution'><button>Solution</button>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# normality testing\nqqPlot(mod_factorial$lm$residuals)\nshapiro.test(mod_factorial$lm$residuals)\n\n# levene's test\ntest_levene(mod_factorial)\n```\n:::\n\n\n</div>\n\n\n** Click tab to see solution **\n",
    "supporting": [
      "15-factorial-anova_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}