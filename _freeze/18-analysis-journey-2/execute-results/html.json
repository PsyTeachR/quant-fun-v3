{
  "hash": "fbaa2f297699aea44ea43899fa9054ef",
  "result": {
    "markdown": "# Analysis Journey 2: Simple Linear Regression {#journey-02-wrangling}\n\nWelcome to the second data analysis journey. We have designed these chapters as a bridge between the structured learning in the core chapters and your assessments. We present you with a new data set, show you what the end product should look like, and see if you can apply your data wrangling, visualisation, and/or analysis skills to get there. \n\nAs you gain independence, this is the crucial skill. Data analysis is all about seeing the data you have available to you and identifying what the end product needs to be to apply your visualisation and analysis techniques. You can then mentally (or physically) create a checklist of tasks to work backwards to get there. There might be a lot of trial and error as you try one thing, it does not quite work, so you go back and try something else. If you get stuck though, we have a range of hints and task lists you can unhide, then the solution to check your attempts against. \n\nIn this second data analysis journey, we focus on inferential statistics after some data wrangling to apply all the skills you developed from Chapter 1 to Chapter 9. \n\n## Task preparation\n\n### Introduction to the data set \n\nFor this task, we are using open data from @binfet_importance_2022, where the authors used the data set to write a separate article on repurposing it for statistics education [@evans_repurposing_2023], inspiring us to use it in the chapter here. The abstract of their article is: \n\n> Researchers have claimed that canine-assisted interventions (CAIs) contribute significantly to bolstering participants' wellbeing, yet the mechanisms within interactions have received little empirical attention. The aim of this study was to assess the impact of client–canine contact on wellbeing outcomes in a sample of 284 undergraduate college students (77% female; 21% male, 2% non-binary). Participants self-selected to participate and were randomly assigned to one of two canine interaction treatment conditions (touch or no touch) or to a handler-only condition with no therapy dog present. To assess self-reports of wellbeing, measures of flourishing, positive and negative affect, social connectedness, happiness, integration into the campus community, stress, homesickness, and loneliness were administered. Exploratory analyses were conducted to assess whether these wellbeing measures could be considered as measuring a unidimensional construct. This included both reliability analysis and exploratory factor analysis. Based on the results of these analyses we created a composite measure using participant scores on a latent factor. We then conducted the tests of the four hypotheses using these factor scores. Results indicate that participants across all conditions experienced enhanced wellbeing on several measures; however, only those in the direct contact condition reported significant improvements on all measures of wellbeing. Additionally, direct interactions with therapy dogs through touch elicited greater wellbeing benefits than did no touch/indirect interactions or interactions with only a dog handler. Similarly, analyses using scores on the wellbeing factor indicated significant improvement in wellbeing across all conditions (handler-only, *d*=0.18, *p*=0.041; indirect, *d*=0.38, *p*<0.001; direct, *d*=0.78, *p*<0.001), with more benefit when a dog was present (*d*=0.20, *p*<0.001), and the most benefit coming from physical contact with the dog (*d*=0.13, *p*=0.002). The findings hold implications for post-secondary wellbeing programs as well as the organization and delivery of CAIs.\n\nIn summary, they were interested in the effect of therapy dogs on well-being in undergraduate students. Participants were randomly allocated to one of three groups: \n\n1. Canine interaction touching the dogs (Direct). \n\n2. Canine interaction not touching the dogs (Indirect). \n\n3. Handler-only with no dogs present (Control). \n\nThey measured 9 outcomes before and after the intervention including social connectedness, stress, and loneliness. For this journey chapter, we will focus on a constrained set of variables and analyses so it does not take forever, but the process would apply to all the outcomes. The authors posed three hypotheses which we will test after some data wrangling:\n\n1. All treatment groups would have significantly higher measures of well-being and lower measures of ill-being after treatment. \n\n2. The treatment groups that interact with dogs would have significantly higher measures of well-being and lower measures of ill-being compared to the handler-only treatment. \n\n3. Direct contact with a therapy dog would yield greater benefits than indirect contact treatment.\n\n### Organising your files and project for the task\n\nBefore we can get started, you need to organise your files and project for the task, so your working directory is in order.\n\n1. In your folder for research methods and the book `ResearchMethods1_2/Quant_Fundamentals`, create a new folder for the data analysis journey called `Journey_02_regression`. Within `Journey_02_regression`, create two new folders called `data` and `figures`.\n\n2. Create an R Project for `Journey_02_regression` as an existing directory for your chapter folder. This should now be your working directory.\n\n3. Create a new R Markdown document and give it a sensible title describing the chapter, such as `Analysis Journey 2 - Simple Linear Regression`. Delete everything below line 10 so you have a blank file to work with and save the file in your `Journey_02_regression` folder. \n\n4. We are working with a new data set, so please save the following data file: [Evans_2023_raw.csv](data/Evans_2023_raw.csv). Right click the link and select \"save link as\", or clicking the link will save the files to your Downloads. Make sure that you save the file as \".csv\". Save or copy the file to your `data/` folder within `Journey_02_regression`.\n\nYou are now ready to start working on the task! \n\n## Overview\n\n### Load <pkg>tidyverse</pkg> and read the data file\n\nBefore we explore what wrangling we need to do, complete the following task list and check the solution if you are stuck. \n\n::: {.callout-tip}\n#### Try this\nComplete the following steps:\n\n1. Load the <pkg>tidyverse</pkg> package. \n    \n2. Read the data file `data/Evans_2023_raw.csv` to the object name `evans_data`.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n#### Show me the solution\nYou should have the following in a code chunk: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load the relevant packages\nlibrary(tidyverse)\n\n# Read the Evans_2023_raw.csv file \nevans_data <- read_csv(\"data/Evans_2023_raw.csv\")\n```\n:::\n\n:::\n\n### Explore `evans_data`\n\nIn `evans_data`, we have the participant ID (`RID`), several demographic variables, and pre- and post-test items for stress, loneliness, and social connectedness. There are 88 variables which would take up loads of space, so we are just showing a preview of the first 20 here. If you use `glimpse()`, you will see all 88. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 284\nColumns: 20\n$ RID             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ GroupAssignment <chr> \"Control\", \"Direct\", \"Indirect\", \"Control\", \"Direct\", …\n$ Age_Yrs         <dbl> 21, 19, 18, 18, 19, 20, 26, 17, 21, 22, 19, 20, 19, 19…\n$ Year_of_Study   <dbl> 3, 1, 1, 1, 1, 2, 2, 1, 3, 4, 2, 2, 2, 2, 3, 1, 1, 1, …\n$ Live_Pets       <dbl> 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, NA, 2, 2, 1,…\n$ Consumer_BARK   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, …\n$ S1_1            <dbl> 2, 2, 4, 2, 3, 4, 4, 3, 2, 2, 3, 2, 3, 4, 3, 2, 4, 2, …\n$ L1_1            <dbl> 3, 3, 3, 4, 2, 4, 3, 2, 3, 4, 3, 3, 4, 4, 4, 2, 3, 4, …\n$ L1_2            <dbl> 3, 2, 3, 2, 3, 3, 2, 3, 4, 1, 3, 3, 2, 3, 1, 4, 3, 2, …\n$ L1_3            <dbl> 4, 3, 2, 2, 3, 3, 1, 3, 3, 1, 2, 2, 1, 3, 1, 3, 3, 1, …\n$ L1_4            <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 4, 1, 2, 3, 2, 3, 2, 4, 3, 2, …\n$ L1_5            <dbl> 2, 4, 3, 4, 4, 3, 2, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3, 4, …\n$ L1_6            <dbl> 3, 3, 4, 4, 3, 2, 3, 3, 3, 4, 3, 3, 4, 3, 4, 2, 2, 4, …\n$ L1_7            <dbl> 1, 2, 2, 1, 2, 2, 4, 2, 2, 1, 3, 2, 3, 2, 2, 2, 3, 3, …\n$ L1_8            <dbl> 2, 2, 3, 3, 2, 3, 2, 3, 3, 2, 3, 2, 2, 3, 2, 4, 3, 2, …\n$ L1_9            <dbl> 3, 4, 3, 3, 3, 3, 3, 3, 2, 4, 3, 3, 4, 4, 4, 3, 2, 3, …\n$ L1_10           <dbl> 4, 3, 3, 4, 2, 2, 3, 3, 3, 4, 4, 3, 4, 4, 4, 2, 2, 3, …\n$ L1_11           <dbl> 3, 2, 2, 2, 4, 3, 4, 2, 2, 1, 3, 2, 2, 2, 2, 4, 3, 2, …\n$ L1_12           <dbl> 1, 2, 2, 1, 4, 3, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 3, 1, …\n$ L1_13           <dbl> 3, 1, 2, 2, 4, 3, 3, 3, 4, 1, 3, 4, 2, 2, 2, 4, 3, 2, …\n```\n:::\n:::\n\n\nThe columns (variables) we have in the data set are:\n\n| Variable       |       Type                       |           Description          |\n|:--------------:|:---------------------------------|:-------------------------------|\n| RID | double| Participant ID number. |\n| GroupAssignment | character| Randomly allocated study group: Control, Indirect, Direct. |\n| Age_Yrs | double| Age in years. |\n| Year_of_Study | double| Participant's year in college: First (1), Second (2), Third (3), Fourth (4), Fifth or more (5). |\n| Live_Pets | double| Does the participant have a pet back at home: Pet back home (1), no pet back home (2). |\n| Consumer_BARK | double| Is the participant a low (1), medium (2), or high (3) consumer of the BARK program - the therapy dog service. |\n| S1_1 | double| Stress scale pre-test, 1 item, 1 (not at all stressed) to 5 (very stressed). |\n| L1_1 to L1_20 | double| Loneliness scale pre-test, 20 items, 1 (never) to 4 (often). |\n| SC1_1 to SC1_20 | double| Social connectedness scale pre-test, 20 items, 1 (strongly disagree) to 6 (strongly agree). |\n| S2_1 | double| Stress scale post-test, 1 item. |\n| L2_1 to L2_20 | double| Loneliness scale post-test, 20 items. |\n| SC2_1 to SC2_20 | double| Social connectedness scale post-test, 20 items, 1 (strongly disagree) to 6 (strongly agree).|\n\n::: {.callout-tip}\n#### Try this\nNow we have introduced the data set, explore them using different methods we introduced. For example, opening the data object as a tab to scroll around, explore with `glimpse()`, or even try plotting some of the individual variables to see what they look like.\n:::\n\n## Wrangling \n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nWe are going to show you a preview of the starting data set and the end product we are aiming for. For the raw data, we have limited this to the first 20 rows again just so it does not take up the whole page, but if you use `glimpse()` you will see all 88 variables.\n\n::: {.panel-tabset}\n#### Raw data\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 284\nColumns: 20\n$ RID             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ GroupAssignment <chr> \"Control\", \"Direct\", \"Indirect\", \"Control\", \"Direct\", …\n$ Age_Yrs         <dbl> 21, 19, 18, 18, 19, 20, 26, 17, 21, 22, 19, 20, 19, 19…\n$ Year_of_Study   <dbl> 3, 1, 1, 1, 1, 2, 2, 1, 3, 4, 2, 2, 2, 2, 3, 1, 1, 1, …\n$ Live_Pets       <dbl> 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, NA, 2, 2, 1,…\n$ Consumer_BARK   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, …\n$ S1_1            <dbl> 2, 2, 4, 2, 3, 4, 4, 3, 2, 2, 3, 2, 3, 4, 3, 2, 4, 2, …\n$ L1_1            <dbl> 3, 3, 3, 4, 2, 4, 3, 2, 3, 4, 3, 3, 4, 4, 4, 2, 3, 4, …\n$ L1_2            <dbl> 3, 2, 3, 2, 3, 3, 2, 3, 4, 1, 3, 3, 2, 3, 1, 4, 3, 2, …\n$ L1_3            <dbl> 4, 3, 2, 2, 3, 3, 1, 3, 3, 1, 2, 2, 1, 3, 1, 3, 3, 1, …\n$ L1_4            <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 4, 1, 2, 3, 2, 3, 2, 4, 3, 2, …\n$ L1_5            <dbl> 2, 4, 3, 4, 4, 3, 2, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3, 4, …\n$ L1_6            <dbl> 3, 3, 4, 4, 3, 2, 3, 3, 3, 4, 3, 3, 4, 3, 4, 2, 2, 4, …\n$ L1_7            <dbl> 1, 2, 2, 1, 2, 2, 4, 2, 2, 1, 3, 2, 3, 2, 2, 2, 3, 3, …\n$ L1_8            <dbl> 2, 2, 3, 3, 2, 3, 2, 3, 3, 2, 3, 2, 2, 3, 2, 4, 3, 2, …\n$ L1_9            <dbl> 3, 4, 3, 3, 3, 3, 3, 3, 2, 4, 3, 3, 4, 4, 4, 3, 2, 3, …\n$ L1_10           <dbl> 4, 3, 3, 4, 2, 2, 3, 3, 3, 4, 4, 3, 4, 4, 4, 2, 2, 3, …\n$ L1_11           <dbl> 3, 2, 2, 2, 4, 3, 4, 2, 2, 1, 3, 2, 2, 2, 2, 4, 3, 2, …\n$ L1_12           <dbl> 1, 2, 2, 1, 4, 3, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 3, 1, …\n$ L1_13           <dbl> 3, 1, 2, 2, 4, 3, 3, 3, 4, 1, 3, 4, 2, 2, 2, 4, 3, 2, …\n```\n:::\n:::\n\n\n#### Wrangled data\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 284\nColumns: 12\n$ RID             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ GroupAssignment <chr> \"Control\", \"Direct\", \"Indirect\", \"Control\", \"Direct\", …\n$ Age_Yrs         <dbl> 21, 19, 18, 18, 19, 20, 26, 17, 21, 22, 19, 20, 19, 19…\n$ Year_of_Study   <dbl> 3, 1, 1, 1, 1, 2, 2, 1, 3, 4, 2, 2, 2, 2, 3, 1, 1, 1, …\n$ Live_Pets       <chr> \"Does not have a pet back home\", \"Does not have a pet …\n$ Consumer_BARK   <chr> \"Low\", \"Low\", \"Low\", \"Low\", \"Low\", \"Low\", \"Low\", \"Low\"…\n$ stress_pre      <dbl> 2, 2, 4, 2, 3, 4, 4, 3, 2, 2, 3, 2, 3, 4, 3, 2, 4, 2, …\n$ stress_post     <dbl> 2, 1, 3, 2, 4, 4, 3, 2, 2, 1, 2, 2, 1, 2, 4, 2, 2, 1, …\n$ lonely_pre      <dbl> 2.25, 1.90, 2.25, 1.75, 2.85, 2.70, 2.40, 2.25, 2.55, …\n$ lonely_post     <dbl> 1.70, 1.60, 2.25, 2.05, 2.70, 2.40, 2.25, 2.00, 2.55, …\n$ social_pre      <dbl> 3.90, 5.15, 4.10, 4.65, 3.65, 4.35, 4.75, 4.60, 4.20, …\n$ social_post     <dbl> 3.800000, 5.263158, 4.150000, 5.100000, 3.600000, 4.65…\n```\n:::\n:::\n\n:::\n\n::: {.callout-tip}\n#### Try this\n\nBefore we give you a task list, try and switch between the raw data and the wrangled data. Make a list of all the differences you can see between the two data objects. \n\n1. Do the values of variables change from numbers? How might you recode them using the code book above?  \n\n2. Looking at the codebook, are some variables the same but renamed? \n\n3. Looking at the codebook, have we calculated the mean of all the items for a scale?\n\nTry and wrangle the data based on all the differences you notice to create a new object `evans_wide`. \n\nFor one hint, unless you read the original paper, there are a bunch of items that first need reverse coding you would not know about:\n\n- Loneliness pre-test: L1_1, L1_5, L1_6, L1_9, L1_10, L1_15, L1_16, L1_19, L1_20.\n\n- Loneliness post-test: L2_1, L2_5, L2_6, L2_9, L2_10, L2_15, L2_16, L2_19, L2_20.\n                          \n- Social connectedness pre-test: SC1_3, SC1_6, SC1_7, SC1_9, SC1_11, SC1_13, SC1_15, SC1_17, SC1_18, SC1_20.\n\n- Social connectedness post-test: SC2_3, SC2_6, SC2_7, SC2_9, SC2_11, SC2_13, SC2_15, SC2_17, SC2_18, SC2_20.\n\nWhen you get as far as you can, check the task list which explains all the steps we applied, but not how to do them. Then, you can check the solution for our code. \n\n:::\n\n### Task list\n\n::: {.callout-note collapse=\"true\"} \n#### Show me the task list\n\nThese are all the steps we applied to create the wrangled data object:\n\n1. Recode `Live_Pets` to the two labels outlined in the code book. \n\n2. Recode `Consumer_BARK` to the three labels outlined in the code book. \n\n3. Reverse code the loneliness and social connectedness items outlined above. Think of previous examples where we explained reverse coding for how you can do this efficiently. \n\nAs one extra piece of advice if you do not want to recode 40 variables one by one, there is a more advanced function you can use within `mutate()`. The function `across()` lets you apply a function or calculation to several columns at once. For example, if we wanted to reverse score items on a 4-point scale, it would look like the following: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmutate(across(.cols = c(column1, column2...), \n              .fns = ~ 5 - .x))\n```\n:::\n\n\nIn `.cols`, we enter all the columns we want to apply the function to. \n\nIn `.fns` after the `=`, we add the function we want to apply to all the columns we selected. The code is a little awkward as we have a tilde `~`, here the calculation we want to apply, and `.x` in place of the column name. You could summarise it as: for all the columns I select, subtract each value from 5. Once you get used to the format, `across()` is really helpful when you want to do the same thing to multiple columns. \n\n4. After reverse coding the items, calculate the subscale mean scores for loneliness and social connectedness. You must do this twice per scale, as we have the 20 items for the pre-test and 20 items for the post-test per scale. \n\n5. If you calculated the subscale mean scores individually, join them back to the `evans_clean` object you mutated. \n\n6. Select the following columns: \n\n    - `RID` to `Consumer_BARK`. \n\n    - Rename `S1_1` to `stress_pre`.\n    \n    - Rename `S2_1` to `stress_post`.\n    \n    - Select your four subscale mean score variables. \n\nRemember: If it's easier for you to complete steps with longer but accurate code, there is nothing wrong with that. You recognise ways to make your code more efficient over time. \n\n:::\n\n### Solution\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThis is the code we used to create the new object `evans_wide` using the original object `evans_data`. As long as you get the same end result, the exact code is not important. In coding, there are multiple ways of getting to the same end result. Maybe you found a more efficient way to complete some of the steps compared to us. Maybe your code was a little longer. As long as it worked, that is the most important thing.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial cleaning step to recode pets and BARK\n# then reverse code a bunch of items \nevans_clean <- evans_data %>% \n  mutate(Live_Pets = case_match(Live_Pets,\n                                1 ~ \"Has a pet back home\",\n                                2 ~ \"Does not have a pet back home\"),\n         Consumer_BARK = case_match(Consumer_BARK,\n                                    1 ~ \"Low\",\n                                    2 ~ \"Medium\",\n                                    3 ~ \"High\"),\n         # across works with mutate to apply the same function to several columns\n         # So, take all the loneliness items to reverse code, then subtract them from 5\n         across(.cols = c(L1_1, L1_5, L1_6, L1_9, L1_10, L1_15, L1_16, L1_19, L1_20,\n                          L2_1, L2_5, L2_6, L2_9, L2_10, L2_15, L2_16, L2_19, L2_20),\n                .fns = ~ 5 - .x),\n         # take all the connectedness items to reverse code, then subtract them from 7\n         across(.cols = c(SC1_3, SC1_6, SC1_7, SC1_9, SC1_11, SC1_13, SC1_15, SC1_17, SC1_18, SC1_20, \n                          SC2_3, SC2_6, SC2_7, SC2_9, SC2_11, SC2_13, SC2_15, SC2_17, SC2_18, SC2_20),\n                .fns = ~ 7 - .x))\n\n# There are more elegant ways around this, but for each set, \n# take the 20 items, group by participant ID, and calculate the mean, ignoring missing values\nlonely_pre <- evans_clean %>% \n  pivot_longer(cols = L1_1:L1_20, \n               names_to = \"Item\", \n               values_to = \"Response\") %>% \n  group_by(RID) %>% \n  summarise(lonely_pre = mean(Response, na.rm = TRUE))\n\n# Same thing for post scores\nlonely_post <- evans_clean %>% \n  pivot_longer(cols = L2_1:L2_20, \n               names_to = \"Item\", \n               values_to = \"Response\") %>% \n  group_by(RID) %>% \n  summarise(lonely_post = mean(Response, na.rm = TRUE))\n\n# take the 20 items, group by participant ID, and calculate the mean, ignoring missing values\nsocial_pre <- evans_clean %>% \n  pivot_longer(cols = SC1_1:SC1_20, \n               names_to = \"Item\", \n               values_to = \"Response\") %>% \n  group_by(RID) %>% \n  summarise(social_pre = mean(Response, na.rm = TRUE))\n\n# Same thing for post scores\nsocial_post <- evans_clean %>% \n  pivot_longer(cols = SC2_1:SC2_20, \n               names_to = \"Item\", \n               values_to = \"Response\") %>% \n  group_by(RID) %>% \n  summarise(social_post = mean(Response, na.rm = TRUE))\n\n# join all four summary values to main data\n# select just the key variables we need\n# rename the two stress items\nevans_wide <- evans_clean %>% \n  inner_join(lonely_pre) %>% \n  inner_join(lonely_post) %>% \n  inner_join(social_pre) %>% \n  inner_join(social_post) %>% \n  select(RID:Consumer_BARK, \n         stress_pre = S1_1, \n         stress_post = S2_1, \n         lonely_pre:social_post)\n```\n:::\n\n:::\n\n## Summarising/visualising \n\nYou should now have an object called `evans_wide` containing 12 variables. If you struggled completing the wrangling steps, you can copy the code from the solution to follow along from this point. In this section, we will calculate some summary statistics and plot the data to see what we can learn. We present you with a list of questions to answer using your wrangling and visualisation skills, interspersed with the solutions to check if you are stuck. \n\n### Demographics\n\nFor demographics, we will recreate some values from Table 1 from @binfet_importance_2022.\n\n1. How many participants were in each group for `GroupAssignment`? \n\n    - <input class='webex-solveme nospaces' size='2' data-answer='[\"94\"]'/> Control\n    \n    - <input class='webex-solveme nospaces' size='2' data-answer='[\"95\"]'/> Direct\n    \n    - <input class='webex-solveme nospaces' size='2' data-answer='[\"95\"]'/> Indirect\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThis nicely reproduces their values. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  count(GroupAssignment)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|GroupAssignment |  n|\n|:---------------|--:|\n|Control         | 94|\n|Direct          | 95|\n|Indirect        | 95|\n\n</div>\n:::\n:::\n\n:::\n\n2. To 2 decimals, what was the mean and standard deviation age per group? \n\n    - Control: *M* = <input class='webex-solveme nospaces' size='5' data-answer='[\"19.95\"]'/>, *SD* = <input class='webex-solveme nospaces' size='4' data-answer='[\"2.89\"]'/>. \n    \n    - Direct: *M* = <input class='webex-solveme nospaces' size='5' data-answer='[\"19.77\"]'/>, *SD* = <input class='webex-solveme nospaces' size='4' data-answer='[\"1.94\"]'/>.\n    \n    - Indirect: *M* = <input class='webex-solveme nospaces' size='5' data-answer='[\"19.95\"]'/>, *SD* = <input class='webex-solveme nospaces' size='4' data-answer='[\"2.23\"]'/>.\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nWeirdly, this reproduces the standard deviations from Table 1, but not the means. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  group_by(GroupAssignment) %>% \n  summarise(mean_age = round(mean(Age_Yrs), 2),\n            sd_age = round(sd(Age_Yrs), 2))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|GroupAssignment | mean_age| sd_age|\n|:---------------|--------:|------:|\n|Control         |    19.95|   2.89|\n|Direct          |    19.77|   1.94|\n|Indirect        |    19.95|   2.23|\n\n</div>\n:::\n:::\n\n:::\n\n3. How many participants in each group have a pet at home? \n\n    - <input class='webex-solveme nospaces' size='2' data-answer='[\"21\"]'/> Control\n    \n    - <input class='webex-solveme nospaces' size='2' data-answer='[\"30\"]'/> Direct\n    \n    - <input class='webex-solveme nospaces' size='2' data-answer='[\"34\"]'/> Indirect\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThis nicely reproduces their values. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  count(GroupAssignment, Live_Pets)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|GroupAssignment |Live_Pets                     |  n|\n|:---------------|:-----------------------------|--:|\n|Control         |Does not have a pet back home | 72|\n|Control         |Has a pet back home           | 21|\n|Control         |NA                            |  1|\n|Direct          |Does not have a pet back home | 63|\n|Direct          |Has a pet back home           | 30|\n|Direct          |NA                            |  2|\n|Indirect        |Does not have a pet back home | 60|\n|Indirect        |Has a pet back home           | 34|\n|Indirect        |NA                            |  1|\n\n</div>\n:::\n:::\n\n:::\n\n4. This is not part of their article, but one interesting question might be how many people have a pet at home (`Live_Pets`) against how frequently they use the BARK program (`Consumer_BARK`). Try and recreate the following bar plot to visualise this as close as possible. We have intentionally used some features we have not covered in the data visualisation chapters to get you problem solving. For one hint though, we used option D for the viridis colour scheme. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](18-analysis-journey-2_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThe new features we hoped you found independently were: \n\n- Setting the factor order to show `Consumer_BARK` as low, medium, then high. \n\n- Set `position = \"dodge\"` to avoid the stacked bar chart. \n\n- Edited the legend title by using the `name` argument in the `scale_fill` layer. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  drop_na(Live_Pets, Consumer_BARK) %>% \n  mutate(Consumer_BARK = factor(Consumer_BARK, \n                                levels = c(\"Low\", \"Medium\", \"High\"))) %>% \n  ggplot(aes(x = Live_Pets, fill = Consumer_BARK)) + \n  geom_bar(position = \"dodge\") + \n  labs(x = \"Pets in Home\", \n       y = \"Frequency\") + \n  scale_fill_viridis_d(option = \"D\", \n                       name = \"BARK Program User\") + \n  theme_classic()\n```\n:::\n\n:::\n\n### Wellbeing measures\n\nFor wellbeing and ill-being measures, we will recreate some values from Table 2 from @binfet_importance_2022.\n\n5. If you calculate the mean and standard deviation of each variable per group, answer the following questions: \n\n    - Which group has the lowest post-test stress value? <select class='webex-select'><option value='blank'></option><option value=''>Control</option><option value='answer'>Direct</option><option value=''>Indirect</option></select>\n    \n    - Which group has the lowest post-test loneliness value? <select class='webex-select'><option value='blank'></option><option value=''>Indirect</option><option value='answer'>Direct</option><option value=''>Control</option></select>\n    \n    - Which group has the lowest post-test social connectedness value? <select class='webex-select'><option value='blank'></option><option value='answer'>Indirect</option><option value=''>Control</option><option value=''>Direct</option></select>\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThis table calculates the mean and standard score for each variable per group. You can use this to answer the questions above. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  pivot_longer(cols = stress_pre:social_post, \n               names_to = \"Variable\", \n               values_to = \"Value\") %>% \n  group_by(GroupAssignment, Variable) %>% \n  summarise(mean_score = round(mean(Value), 2), \n            sd_score = round(sd(Value), 2))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'GroupAssignment'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|GroupAssignment |Variable    | mean_score| sd_score|\n|:---------------|:-----------|----------:|--------:|\n|Control         |lonely_post |       1.96|     0.57|\n|Control         |lonely_pre  |       2.02|     0.55|\n|Control         |social_post |       4.49|     0.87|\n|Control         |social_pre  |       4.47|     0.81|\n|Control         |stress_post |       2.76|     1.08|\n|Control         |stress_pre  |       3.27|     1.04|\n|Direct          |lonely_post |       1.82|     0.51|\n|Direct          |lonely_pre  |       2.05|     0.56|\n|Direct          |social_post |       4.64|     0.79|\n|Direct          |social_pre  |       4.42|     0.88|\n|Direct          |stress_post |       1.84|     0.76|\n|Direct          |stress_pre  |       3.15|     0.98|\n|Indirect        |lonely_post |       1.96|     0.52|\n|Indirect        |lonely_pre  |       2.06|     0.48|\n|Indirect        |social_post |       4.50|     0.82|\n|Indirect        |social_pre  |       4.37|     0.79|\n|Indirect        |stress_post |       2.53|     1.00|\n|Indirect        |stress_pre  |       3.21|     0.90|\n\n</div>\n:::\n:::\n\n:::\n\n6. Create a scatterplot of the relationship between post-test social connectedness and loneliness. The relationship between the two variables is <select class='webex-select'><option value='blank'></option><option value='answer'>negative</option><option value=''>positive</option></select>, meaning that as social connectedness increases, we expect loneliness to <select class='webex-select'><option value='blank'></option><option value=''>increase</option><option value='answer'>decrease</option></select>.\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThe code here creates a scatterplot for the relationship between post-test social connectedness and loneliness. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  ggplot(aes(x = lonely_post, y = social_post)) + \n  geom_point() + \n  geom_smooth(method = \"lm\") + \n  theme_classic() + \n  labs(x = \"Loneliness Post-test\", y = \"Social Connectedness Post-test\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](18-analysis-journey-2_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n7. As we start to think about inferential statistics, we can plot the difference between pre- and post-test for each group. For this question, try and recreate the boxplot to visualise stress. Hint: think about if you need to restructure the data, and how you can present the conditions in the appropriate order. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](18-analysis-journey-2_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThere are two key steps before you can plot the data. First, you need to restructure the data to long form to get one variable for pre- and post-test. Second, post comes before pre due to alphabetical order, so you need to create a factor to specify the order here. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide %>% \n  pivot_longer(cols = stress_pre:stress_post, \n               names_to = \"Stress\", \n               values_to = \"Value\") %>% \n  mutate(Stress = factor(Stress,\n                         levels = c(\"stress_pre\", \"stress_post\"), \n                         labels = c(\"Pre-test\", \"Post-test\"))) %>% \n  ggplot(aes(x = GroupAssignment, y = Value, fill = Stress)) + \n  geom_boxplot(alpha = 0.7) + \n  labs(x = \"Group Assignment\", y = \"Stress Scale\") + \n  scale_fill_viridis_d(option = \"E\", \n                       name = \"Time\") + \n  theme_classic()\n```\n:::\n\n:::\n\n8. Try and recreate the violin-boxplot to visualise loneliness. Hint: remember how to align the different elements from Chapter 7. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](18-analysis-journey-2_files/figure-html/unnamed-chunk-17-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nThe same hints apply as question 7 as you need to restructure the data and create a new factor order so pre comes before post. As we have two grouping variables, we must specify a constant position dodge value so it does not plot weird. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# specify as an object, so we only change it in one place\ndodge_value <- 0.9\n\nevans_wide %>% \n  pivot_longer(cols = lonely_pre:lonely_post, \n               names_to = \"Lonely\", \n               values_to = \"Value\") %>% \n   mutate(Lonely = factor(Lonely,\n                          levels = c(\"lonely_pre\", \"lonely_post\"), \n                          labels = c(\"Pre-test\", \"Post-test\"))) %>% \n  ggplot(aes(x = GroupAssignment, y = Value, fill = Lonely)) + \n  geom_violin(alpha = 0.5) + \n  geom_boxplot(width = 0.2, \n               alpha = 0.7,\n               fatten = NULL,\n               position = position_dodge(dodge_value)) + \n  stat_summary(fun = \"mean\", \n               geom = \"point\",\n               position = position_dodge(dodge_value)) +\n  stat_summary(fun.data = \"mean_cl_boot\", \n               geom = \"errorbar\", \n               width = .1,\n               position = position_dodge(dodge_value)) +\n  scale_fill_viridis_d(option = \"E\", \n                       name = \"Time\") + \n  labs(x = \"Group Assignment\", y = \"Loneliness Scale\") + \n  theme_classic()\n```\n:::\n\n:::\n\n## Analysing \n\nFinally, we turn to analysis for inferential statistics. In @evans_repurposing_2023, they organise the analyses from @binfet_importance_2022 into three hypotheses. You have not covered all the skills in Research Methods 1 to reproduce their analyses exactly, so we will work around an adapted set based on what we currently expect of you. \n\nWe present each analysis as an overview so you can think about what techniques from Chapters 8 and 9 would address it, give you instructions on what analysis we have in mind if you need guidance, then present the solution. We focus on one outcome per hypothesis, but once you are confident you are applying and interpreting the appropriate techniques, why not try the other outcomes yourself? \n\n### Hypothesis 1\n\n9. Hypothesis 1 is that each treatment group will increase measures of well-being (social connectedness) and decrease measures of ill-being (stress and loneliness). For this question, we focus on stress, so we expected stress to decrease. \n\n::: {.callout-tip}\n#### Try this\nThere are two ways you could approach this. Either as the whole sample, or like @evans_repurposing_2023 present to focus on each group separately. Think about what techniques from Chapters 8 and 9 would let you test the hypothesis that each treatment group will decrease stress at post-test compared to pre-test.\n:::\n\n::: {.callout-note collapse=\"true\"} \n#### Show me the task list\n\nFor the solution below, we are focusing on the whole sample to test whether everyone decreased stress in post-test, but you could approach it by separating the data into the three groups and then testing for the difference per group. \n\nTo test whether an outcome decreases between conditions in the same participants, we need a model suitable for a within-subjects design. In Chapter 9, we covered in [the bonus section](#09-bonus) how to test the difference in conditions either through a paired samples-test or linear model with fixed intercept on the difference score. \n\n1. Calculate the difference between stress pre- and post-test. \n\n2. Fit a linear model on the difference score with a fixed intercept and no predictor. \n\n3. Look at the intercept, is it positive or negative? If you calculated pre-test minus post-test, you would be looking for a postive difference as we expect lower stress at post-test. For hypothesis testing, is the *p*-value lower than alpha? \n\n4. What is the effect size? How much did stress change from pre-test to post-test? What is the confidence interval around the effect size? \n\n:::\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nIn the code below, we first calculate a difference score by substracting stress post-test from stress pre-test. \n\nWe then fit a linear model on this difference score and add a fixed intercept as we have no predictor. \n\nConsistent with hypothesis 1, stress was lower at post-test compared to pre-test across all participants. On average, participants decreased their stress score by 0.83 points ($b_0$ = 0.83, 95% CI = [0.72, 0.95], *p* < .001).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nevans_wide <- evans_wide %>% \n  mutate(stress_diff = stress_pre - stress_post)\n\nlm_stress <- lm(stress_diff ~ 1, \n                data = evans_wide)\n\nsummary(lm_stress)\n\nconfint(lm_stress)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = stress_diff ~ 1, data = evans_wide)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.8345 -0.8345  0.1655  0.1655  3.1655 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.83451    0.05657   14.75   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9534 on 283 degrees of freedom\n\n                2.5 %    97.5 %\n(Intercept) 0.7231517 0.9458623\n```\n:::\n:::\n\n:::\n\n### Hypothesis 2\n\n10. In Hypothesis 2, we predict that the direct and indirect contact groups will have higher well-being and lower ill-being measures compared to the control group. For this question, we focus on social connectedness at post-test for a measure of well-being, so we expect higher scores in the direct and indirect groups. \n\n::: {.callout-tip}\n#### Try this\nThink about what techniques from Chapters 8 and 9 would let you test the hypothesis that the direct and indirect groups both increase social connectedness at post-test compared to the control group. Think of how you could focus on two groups at a time per analysis. \n:::\n\n::: {.callout-note collapse=\"true\"} \n#### Show me the task list\n\nFor the solution below, we apply two tests. We focus on the direct and control groups by filtering out indirect, then we focus on indirect and control by filtering out direct. \n\nTo test the difference between two groups on one outcome, we need a model suitable for a between-subjects design. In Chapter 9, we covered [linear regression with one categorical predictor](#09-categorical) how to test the difference in an outcome between two groups. \n\n1. Fit a linear model on the outcome social connectedness post-test with a categorical predictor of group. You will need to fit two models, one where you filter out the indirect group and one where you filter out the direct group. \n\n2. Look at the intercept, what is the predicted value for the reference group? Look at the slope, what is the estimated change to the target group? For hypothesis 2, is the direct/indirect group higher on social connectedness compared to control? For hypothesis testing, is the *p*-value lower than alpha? \n\n3. What is the effect size? How much did the two groups differ on social connectedness? What is the confidence interval around the effect size? \n\n:::\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nIn the code below, we first fit a linear model on social connectedness post-test and focus on the direct and control groups. There are different ways you could ignore the indirect group, but here we filter the data as we pass the data to the `lm()` function.   \n\nThe direct group increased social connectedness post-test on average 0.15 points compared to the control group, but the difference was not statistically significant ($b_1$ = 0.15, 95% CI = [-0.09, 0.39], *p* = .207).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm_direct <- lm(social_post ~ GroupAssignment, \n                 data = filter(evans_wide,\n                               GroupAssignment != \"Indirect\"))\n\nsummary(lm_direct)\n\nconfint(lm_direct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = social_post ~ GroupAssignment, data = filter(evans_wide, \n    GroupAssignment != \"Indirect\"))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.2940 -0.5905  0.1338  0.6560  1.3560 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            4.49054    0.08596  52.239   <2e-16 ***\nGroupAssignmentDirect  0.15349    0.12125   1.266    0.207    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8334 on 187 degrees of freedom\nMultiple R-squared:  0.008497,\tAdjusted R-squared:  0.003195 \nF-statistic: 1.603 on 1 and 187 DF,  p-value: 0.2071\n\n                            2.5 %    97.5 %\n(Intercept)            4.32096331 4.6601179\nGroupAssignmentDirect -0.08569829 0.3926749\n```\n:::\n:::\n\n\nThe indirect group increased social connectedness post-test compared to the control group, but the difference was very small and not statistically significant ($b_1$ = 0.01, 95% CI = [-0.23, 0.25], *p* = .936).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm_indirect <- lm(social_post ~ GroupAssignment, \n                 data = filter(evans_wide,\n                               GroupAssignment != \"Direct\"))\n\nsummary(lm_indirect)\n\nconfint(lm_indirect)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = social_post ~ GroupAssignment, data = filter(evans_wide, \n    GroupAssignment != \"Direct\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.70037 -0.59054  0.05946  0.64963  1.34963 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)             4.490541   0.087155   51.52   <2e-16 ***\nGroupAssignmentIndirect 0.009833   0.122931    0.08    0.936    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.845 on 187 degrees of freedom\nMultiple R-squared:  3.422e-05,\tAdjusted R-squared:  -0.005313 \nF-statistic: 0.006398 on 1 and 187 DF,  p-value: 0.9363\n\n                             2.5 %    97.5 %\n(Intercept)              4.3186067 4.6624745\nGroupAssignmentIndirect -0.2326772 0.2523439\n```\n:::\n:::\n\n\nIn @evans_repurposing_2023, the direct vs control comparison is significant, but they approached the analysis differently using a technique you will not learn until Research Methods 2. They control for pre-test scores by using it as an additional predictor, but you have not learnt about multiple regression yet. \n:::\n\n### Hypothesis 3\n\n11. Finally, the third hypothesis focuses on the difference between the two contact groups. They predict that the direct contact group will lead to higher well-being and lower ill-being compared to the indirect contact group. For this question, we focus on loneliness post-test for a measure of ill-being, so we expect lower scores in the direct group. \n\n::: {.callout-tip}\n#### Try this\nThink about what techniques from Chapters 8 and 9 would let you test the hypothesis that the direct group decreases loneliness at post-test compared to the indirect group.\n:::\n\n::: {.callout-note collapse=\"true\"} \n#### Show me the task list\n\nFor this analysis, we focus on the final combination of groups, this time ignoring the control group.\n\nTo test the difference between two groups on one outcome, we need a model suitable for a between-subjects design. In Chapter 9, we covered [linear regression with one categorical predictor](#09-categorical) how to test the difference in an outcome between two groups. \n\n1. Fit a linear model on the outcome loneliness post-test with a categorical predictor of group. Filter the data to just focus on the direct and indirect contact groups. \n\n2. Look at the intercept, what is the predicted value for the reference group? Look at the slope, what is the estimated change to the target group? For hypothesis 3, is the direct group lower on loneliness compared to indirect? For hypothesis testing, is the *p*-value lower than alpha? \n\n3. What is the effect size? How much did the two groups differ on loneliness? What is the confidence interval around the effect size? \n\n:::\n\n::: {.callout-caution collapse=\"true\"} \n#### Show me the solution\n\nIn the code below, we first fit a linear model on loneliness post-test and focus on the direct and indirect groups. There are different ways you could ignore the indirect group, but here we filter the data as we pass the data to the `lm()` function.   \n\nThe direct group decreased loneliness post-test on average 0.14 points compared to the indirect group, but the difference was not statistically significant ($b_1$ = 0.14, 95% CI = [-0.01, 0.29], *p* = .060).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm_contact <- lm(lonely_post ~ GroupAssignment, \n                 data = filter(evans_wide,\n                               GroupAssignment != \"Control\"))\n\nsummary(lm_contact)\n\nconfint(lm_contact)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = lonely_post ~ GroupAssignment, data = filter(evans_wide, \n    GroupAssignment != \"Control\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.96457 -0.42130 -0.06457  0.32645  1.58543 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              1.82355    0.05267  34.625   <2e-16 ***\nGroupAssignmentIndirect  0.14102    0.07448   1.893   0.0598 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5133 on 188 degrees of freedom\nMultiple R-squared:  0.01871,\tAdjusted R-squared:  0.01349 \nF-statistic: 3.585 on 1 and 188 DF,  p-value: 0.05983\n\n                               2.5 %    97.5 %\n(Intercept)              1.719655160 1.9274363\nGroupAssignmentIndirect -0.005898489 0.2879484\n```\n:::\n:::\n\n\nLike hypothesis 2, @evans_repurposing_2023 report the direct vs indirect comparison as significant, but they approached the analysis differently using a technique you will not learn until Research Methods 2. They control for pre-test scores by using it as an additional predictor, but you have not learnt about multiple regression yet. \n:::\n\n## Conclusion\n\nWell done! Hopefully you recognised how far your skills have come to be able to do this independently, regardless of how many hints you needed. We are really starting to pile the skills up you have learnt so far, from simply using R Markdown files, to wrangling data, to visualising data, to finally applying modelling techniques for your inferential statistics. \n\nIf you are curious, you can read @evans_repurposing_2023 to see how they walk through wrangling and analysing the data. Some of the techniques we do not cover in Research Methods 1, but they have some great features like highlighting common student mistakes. \n",
    "supporting": [
      "18-analysis-journey-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}